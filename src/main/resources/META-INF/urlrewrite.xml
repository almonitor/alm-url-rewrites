<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 3.2//EN"
        "http://tuckey.org/res/dtds/urlrewrite3.2.dtd">
<urlrewrite>
    <!-- Inbound rules, /pulse/ version -->
    <rule>
        <note>Add trailing / </note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <from>^/cms$</from>
        <to>/cms/</to>
    </rule>

    <rule>
        <note>Add cms part</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <condition type="attribute" name="jahiaSeoAddCmsPrefix" operator="equal">^true$</condition>
        <from>^/(.*)$</from>
        <to>/cms/$1</to>
    </rule>

    <rule>
        <note>Resolve files SEO</note>
        <condition type="attribute" name="vanityUrlFiles" operator="equal">^true$</condition>
        <condition type="attribute" name="vanityUrlTargetPath" operator="notequal">^$</condition>
        <from>^/(.*)$</from>
        <to>/files/live/%{attribute:vanityUrlTargetPath}</to>
    </rule>

    <rule>
        <note>AUR Add trailing /</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <condition type="attribute" name="jahiaSiteKeyForCurrentServerName" operator="notequal">^$</condition>
        <condition type="attribute" name="vanityUrlTargetPath" operator="equal">^$</condition>
        <from>^/cms/([a-z]{2}(_[A-Z]{2})?)$</from>
        <to>/cms/$1/</to>
    </rule>

    <rule>
        <note>AUR Add language to URL if not present (no context)</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <condition type="attribute" name="siteDefaultLanguage" operator="notequal">^$</condition>
        <condition type="attribute" name="contextPath" operator="equal">^$</condition>
        <condition type="request-uri" operator="notequal">^/(cms/)?[a-z]{2}(_[A-Z]{2})?/.*</condition>
        <condition type="attribute" name="vanityUrlTargetPath" operator="equal">^$</condition>
        <from>^/cms/(.*)$</from>
        <to>/cms/%{attribute:siteDefaultLanguage}/$1</to>
    </rule>

    <rule>
        <note>AUR Add language to URL if not present (with context)</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <condition type="attribute" name="siteDefaultLanguage" operator="notequal">^$</condition>
        <condition type="attribute" name="contextPath" operator="notequal">^$</condition>
        <condition type="request-uri" operator="notequal">^(/[\p{Alnum}\-_]*)/(cms/)?[a-z]{2}(_[A-Z]{2})?/.*</condition>
        <condition type="attribute" name="vanityUrlTargetPath" operator="equal">^$</condition>
        <from>^/cms/(.*)$</from>
        <to>/cms/%{attribute:siteDefaultLanguage}/$1</to>
    </rule>

    <rule>
        <note>AUR Add the key of the site if it was resolved by server name, and if URL does not start with /users or /sites (no context)</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <condition type="attribute" name="jahiaSiteKeyForCurrentServerName" operator="notequal">^$</condition>
        <condition type="attribute" name="vanityUrlTargetPath" operator="equal">^$</condition>
        <condition type="attribute" name="contextPath" operator="equal">^$</condition>
        <condition type="request-uri" operator="notequal">^/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?mounts/.*</condition>
        <condition type="request-uri" operator="notequal">^/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?users/.*</condition>
        <condition type="request-uri" operator="notequal">^/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?modules/.*</condition>
        <condition type="request-uri" operator="notequal">^/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?sites/.*</condition>
        <from>^/cms/([a-z]{2}(_[A-Z]{2})?/)?(.*)$</from>
        <to>/cms/$1sites/%{attribute:jahiaSiteKeyForCurrentServerName}/$3</to>
    </rule>

    <rule>
        <note>AUR Add the key of the site if it was resolved by server name, and if URL does not start with /users or /sites (with context)</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <condition type="attribute" name="jahiaSiteKeyForCurrentServerName" operator="notequal">^$</condition>
        <condition type="attribute" name="vanityUrlTargetPath" operator="equal">^$</condition>
        <condition type="attribute" name="contextPath" operator="notequal">^$</condition>
        <condition type="request-uri" operator="notequal">^(/[\p{Alnum}\-_]*)?/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?mounts/.*</condition>
        <condition type="request-uri" operator="notequal">^(/[\p{Alnum}\-_]*)?/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?users/.*</condition>
        <condition type="request-uri" operator="notequal">^(/[\p{Alnum}\-_]*)?/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?modules/.*</condition>
        <condition type="request-uri" operator="notequal">^(/[\p{Alnum}\-_]*)?/(cms/)?([a-z]{2}(_[A-Z]{2})?/)?sites/.*</condition>
        <from>^/cms/([a-z]{2}(_[A-Z]{2})?/)?(.*)$</from>
        <to>/cms/$1sites/%{attribute:jahiaSiteKeyForCurrentServerName}/$3</to>
    </rule>

        <!-- Inbound rules, ALM customizations -->
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents part for Middle East Minute</name>
        <from>^/cms/(.*)/almonitor/mem/(.*)$</from>
        <to>/cms/$1/almonitor/contents/middleeastminute/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents part for AFP 2</name>
        <from>^/cms/(.*)/almonitor/afp/(.*)$</from>
        <to>/cms/$1/almonitor/contents/afp/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles part for Originals</name>
        <from>^/cms/(.*)/almonitor/originals/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/originals/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles part for opinion</name>
        <from>^/cms/(.*)/almonitor/opinion/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/originals/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/ part for Partners</name>
        <from>^/cms/(.*)/almonitor/partners/(.*)$</from>
        <to>/cms/$1/almonitor/contents/partners/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles/ part for Politics</name>
        <from>^/cms/(.*)/almonitor/politics/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/politics/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles/ part for Business</name>
        <from>^/cms/(.*)/almonitor/business/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/business/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles/ part for Culture</name>
        <from>^/cms/(.*)/almonitor/culture/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/culture/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles/ part for Security</name>
        <from>^/cms/(.*)/almonitor/security/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/security/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/articles/ part for Galleries</name>
        <from>^/cms/(.*)/almonitor/galleries/(.*)$</from>
        <to>/cms/$1/almonitor/contents/articles/galleries/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/authors part for Authors</name>
        <from>^/cms/(.*)/almonitor/authors/(.*)$</from>
        <to>/cms/$1/almonitor/contents/authors/$2</to>
    </rule>
    <rule>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <name>Add the /contents/authors part for Trending Topics</name>
        <from>^/cms/(.*)/almonitor/trending-topics/(.*)$</from>
        <to>/cms/$1/almonitor/contents/trending-topics/$2</to>
    </rule>

    <rule>
        <name>AUR Add the /cms/render/live part</name>
        <note>Prepend /cms/render/live to all page requests, which do not have it yet</note>
        <condition type="attribute" name="jahiaSkipInboundSeoRules" operator="notequal">^true$</condition>
        <from>^/cms/(.*)$</from>
        <to last="true">/cms/render/live/$1</to>
    </rule>


  <!-- Outbound rules -->
    <outbound-rule>
        <name>Handle link to a resource of same site</name>
        <note>
            Removes the site key from the URL if the current server name is mapped to this site.
            Removes the language token if it is the default language of the site.
        </note>
        <condition type="attribute" name="jahiaSiteKeyMatchesCurrentServerName" operator="equal">^true$</condition>
        <condition type="attribute" name="jahiaSeoServernameForLink" operator="equal">^$</condition>
        <from>^(/[\p{Alnum}\-_]*)?/cms/render/live/([a-zA-Z_]{2,5})/sites/([\p{Alnum}\-_]+)(/.*)?$</from>
        <to>$1%{attribute:jahiaSeoCmsToken}%{attribute:jahiaSeoLanguageToken}$4</to>
    </outbound-rule>

    <outbound-rule>
        <name>Handles link to a resource of another site: keep hostname</name>
        <note>
            A link is to a resource on another site.
            Keeps the site key in the URL.
            Removes the language token if it is the default language of the target site.
        </note>
        <condition type="attribute" name="jahiaSiteKeyMatchesCurrentServerName" operator="notequal">^true$</condition>
        <condition type="attribute" name="jahiaSeoServernameForLink" operator="equal">^$</condition>
        <from>^(/[\p{Alnum}\-_]*)?/cms/render/live/([a-zA-Z_]{2,5})/sites/([\p{Alnum}\-_]+)(/.*)?$</from>
        <to>$1%{attribute:jahiaSeoCmsToken}%{attribute:jahiaSeoLanguageToken}/sites/$3$4</to>
    </outbound-rule>

    <outbound-rule>
        <name>Handles link to a resource of another site: switch hostname</name>
        <note>
            Removes the site key from the URL and changes the server name.
            Removes the language token if it is the default language of the target site.
            Removes the /render/live part.
            Removes the /cms part if not disabled and in case the following path does not start with a reserved prefix.
        </note>
        <condition type="attribute" name="jahiaSeoServernameForLink" operator="notequal">^$</condition>
        <from>^(/[\p{Alnum}\-_]*)?/cms/render/live/([a-zA-Z_]{2,5})/sites/([\p{Alnum}\-_]+)(/.*)?$</from>
        <to>$1%{attribute:jahiaSeoCmsToken}%{attribute:jahiaSeoLanguageToken}$4</to>
    </outbound-rule>

  <!-- Outbound rules, ALM customizations -->
    <outbound-rule>
        <name>Remove the /contents/articles part in Originals</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/articles/originals/(.*)$</from>
        <to>$1/originals/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in Business</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/articles/business/(.*)$</from>
        <to>$1/business/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in Culture</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/articles/culture/(.*)$</from>
        <to>$1/culture/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in Security</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/articles/security/(.*)$</from>
        <to>$1/security/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in Politics</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/articles/politics/(.*)$</from>
        <to>$1/politics/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/ part in Partners</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/partners/(.*)$</from>
        <to>$1/sources/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in Galleries</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/articles/galleries/(.*)$</from>
        <to>$1/galleries/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in AFP 2</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/afp/(.*)$</from>
        <to>$1/afp/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/ part in authors</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/authors/(.*)$</from>
        <to>$1/authors/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/ part in trending topics</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/trending-topics/(.*)$</from>
        <to>$1/trending-topics/$2</to>
    </outbound-rule>
    <outbound-rule>
        <name>Remove the /contents/articles part in Middle East Minute</name>
        <from>^(/[\p{Alnum}\-_]*)?/contents/middleeastminute/(.*)$</from>
        <to>$1/mem/$2</to>
    </outbound-rule>

  
 <!-- Outbound rules, /pulse/ version -->
    <outbound-rule>
        <name>Perform outbound URL analysis (URLs with vanity mappings)</name>
        <note>Those URLs were not modified by the previous rules. Will check if the /cms should and can be removed.</note>
        <from>^(/[\p{Alnum}\-_]*)?/cms/render/live/(.*)$</from>
        <run class="org.jahia.services.seo.urlrewrite.ServerNameToSiteMapper" method="checkCmsPrefix(HttpServletRequest, String, String)"/>
    </outbound-rule>

    <outbound-rule>
        <name>Remove the /cms/render/live part</name>
        <note>Removes the /render/live part for remaining URLs and /cms if not disabled and if the path does not start with a reserved word.</note>
        <from>^(/[\p{Alnum}\-_]*)?/cms/render/live/(.*)?$</from>
        <to>$1%{attribute:jahiaSeoCmsToken}/$2</to>
    </outbound-rule>

    <outbound-rule>
        <name>Add the /pulse part</name>
        <note>Adds the /pulse part.</note>
        <from>^(/[\p{Alnum}\-_]*)?/cms/(.*)?$</from>
        <to>$1/cms/$2</to>
    </outbound-rule>

  
</urlrewrite>
